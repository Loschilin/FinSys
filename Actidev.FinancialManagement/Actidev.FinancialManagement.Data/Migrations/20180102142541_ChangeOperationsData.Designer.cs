// <auto-generated />
using Actidev.FinancialManagement.Data.Contexts;
using Actidev.FinancialManagement.Data.Enums;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Actidev.FinancialManagement.Data.Migrations
{
    [DbContext(typeof(FinancialContext))]
    [Migration("20180102142541_ChangeOperationsData")]
    partial class ChangeOperationsData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Actidev.FinancialManagement.Data.Entities.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<Guid?>("ParentId");

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("UserId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Actidev.FinancialManagement.Data.Entities.BankAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Account");

                    b.Property<string>("BankName");

                    b.Property<string>("Bik");

                    b.Property<Guid>("CompanyId");

                    b.Property<string>("CompanyName");

                    b.Property<decimal>("InitialBalance");

                    b.Property<DateTime>("InitialBalanceDate");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("Actidev.FinancialManagement.Data.Entities.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("GeneralManager");

                    b.Property<string>("Inn");

                    b.Property<string>("Kpp");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Actidev.FinancialManagement.Data.Entities.Contractor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Account");

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("Comment");

                    b.Property<string>("Description");

                    b.Property<string>("Email");

                    b.Property<string>("FullName");

                    b.Property<string>("Index");

                    b.Property<string>("Inn");

                    b.Property<string>("Kpp");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.Property<string>("SiteUrl");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Contractors");
                });

            modelBuilder.Entity("Actidev.FinancialManagement.Data.Entities.FileInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("FileName");

                    b.Property<string>("Path");

                    b.HasKey("Id");

                    b.ToTable("FilesInfo");
                });

            modelBuilder.Entity("Actidev.FinancialManagement.Data.Entities.Operations.Operation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("AccrualDate");

                    b.Property<int?>("AccrualOperationType");

                    b.Property<decimal>("Amount");

                    b.Property<Guid>("ArticleId");

                    b.Property<string>("Comment");

                    b.Property<Guid>("ContractorId");

                    b.Property<DateTime>("Date");

                    b.Property<Guid?>("FileInfoId");

                    b.Property<Guid?>("OperationTemplateOptionsId");

                    b.Property<int>("Type");

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("ContractorId");

                    b.HasIndex("FileInfoId");

                    b.HasIndex("OperationTemplateOptionsId")
                        .IsUnique()
                        .HasFilter("[OperationTemplateOptionsId] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("Actidev.FinancialManagement.Data.Entities.Operations.OperationTemplateOptions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("OprationId");

                    b.Property<int>("Repeat");

                    b.HasKey("Id");

                    b.ToTable("OperationTemplateOptions");
                });

            modelBuilder.Entity("Actidev.FinancialManagement.Data.Entities.Operations.OperationToBankAccountLink", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("BankAccountId");

                    b.Property<Guid>("OperationId");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("OperationId");

                    b.ToTable("OperationToBankAccountLinks");
                });

            modelBuilder.Entity("Actidev.FinancialManagement.Data.Entities.Operations.OperationToProjectLink", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<Guid>("OperationId");

                    b.Property<Guid>("ProjectId");

                    b.HasKey("Id");

                    b.HasIndex("OperationId");

                    b.HasIndex("ProjectId");

                    b.ToTable("OperationToProjectLinks");
                });

            modelBuilder.Entity("Actidev.FinancialManagement.Data.Entities.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Actidev.FinancialManagement.Data.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Actidev.FinancialManagement.Data.Entities.Article", b =>
                {
                    b.HasOne("Actidev.FinancialManagement.Data.Entities.Article", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("ParentId");

                    b.HasOne("Actidev.FinancialManagement.Data.Entities.User", "User")
                        .WithMany("Articles")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Actidev.FinancialManagement.Data.Entities.BankAccount", b =>
                {
                    b.HasOne("Actidev.FinancialManagement.Data.Entities.Company", "Company")
                        .WithMany("BankAccounts")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Actidev.FinancialManagement.Data.Entities.Company", b =>
                {
                    b.HasOne("Actidev.FinancialManagement.Data.Entities.User", "User")
                        .WithMany("Companies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Actidev.FinancialManagement.Data.Entities.Contractor", b =>
                {
                    b.HasOne("Actidev.FinancialManagement.Data.Entities.User", "User")
                        .WithMany("Contractors")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Actidev.FinancialManagement.Data.Entities.Operations.Operation", b =>
                {
                    b.HasOne("Actidev.FinancialManagement.Data.Entities.Article", "Article")
                        .WithMany("Operations")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Actidev.FinancialManagement.Data.Entities.Contractor", "Contractor")
                        .WithMany("Operations")
                        .HasForeignKey("ContractorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Actidev.FinancialManagement.Data.Entities.FileInfo", "FileInfo")
                        .WithMany("Operations")
                        .HasForeignKey("FileInfoId");

                    b.HasOne("Actidev.FinancialManagement.Data.Entities.Operations.OperationTemplateOptions", "OperationTemplateOptions")
                        .WithOne("Operation")
                        .HasForeignKey("Actidev.FinancialManagement.Data.Entities.Operations.Operation", "OperationTemplateOptionsId");

                    b.HasOne("Actidev.FinancialManagement.Data.Entities.User")
                        .WithMany("Operations")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Actidev.FinancialManagement.Data.Entities.Operations.OperationToBankAccountLink", b =>
                {
                    b.HasOne("Actidev.FinancialManagement.Data.Entities.BankAccount", "BankAccount")
                        .WithMany("OperationToBankAccountLinks")
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Actidev.FinancialManagement.Data.Entities.Operations.Operation", "Operation")
                        .WithMany("OperationToBankAccountLinks")
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Actidev.FinancialManagement.Data.Entities.Operations.OperationToProjectLink", b =>
                {
                    b.HasOne("Actidev.FinancialManagement.Data.Entities.Operations.Operation", "Operation")
                        .WithMany("OperationToProjectLinks")
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Actidev.FinancialManagement.Data.Entities.Project", "Project")
                        .WithMany("OperationToProjectLinks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Actidev.FinancialManagement.Data.Entities.Project", b =>
                {
                    b.HasOne("Actidev.FinancialManagement.Data.Entities.User", "User")
                        .WithMany("Projects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
